plugins {
    id 'com.android.application'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'kotlin-kapt'
   // id 'kotlin-android-extensions'
}

android {
    signingConfigs {
        debug {
            storeFile file('C:\\Users\\peter\\keystores\\ks1.jks')
            storePassword 'brownbeatle1BB'
            keyAlias 'key0'
            keyPassword 'brownbeatle1BB'
        }
        release {
            storeFile file('C:\\Users\\peter\\keystores\\ks1.jks')
            storePassword 'brownbeatle1BB'
            keyAlias 'key0'
            keyPassword 'brownbeatle1BB'
        }
        release1 {
            storeFile file('C:\\Users\\peter\\keystores\\androidapk.jks')
            storePassword 'greenturtles1GT'
            keyAlias 'symkey1'
            keyPassword 'greenturtles1GT'
        }
    }
    compileSdk 33
    kotlinOptions.useIR = true

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    
    defaultConfig {
        applicationId "com.drokka.emu.symicon.generateicon"
        minSdkVersion 30
        targetSdkVersion 33
        versionCode 6
        versionName "3.0"

     //   testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.

    }


    testOptions {
        unitTests.includeAndroidResources = true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled true
    }
    viewBinding{
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path file('../../../CLionProjects/emu/utility/CMakeLists.txt')
        }
    }

    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    ndkVersion '22.0.7026061'
    buildToolsVersion '30.0.3'
    namespace 'com.drokka.emu.symicon.generateicon'
    buildFeatures {
        viewBinding true
    }

}

dependencies {

  //  implementation("androidx.paging:paging-runtime-ktx:3.1.0")
// optional - Jetpack Compose integration
  //  implementation("androidx.paging:paging-compose:1.")

   // implementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha02'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
   // implementation 'androidx.test:monitor:1.4.0'
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4')
//    implementation 'com.google.firebase:firebase-firestore-ktx:24.0.0'
  //  implementation 'junit:junit:4.13.2'
//    implementation 'androidx.annotation:annotation:1.3.0'
  //  implementation 'androidx.test:core-ktx:1.4.0'
 //   implementation 'androidx.test:core:1.4.0'
 //   implementation project(path: ':widgets')
  //  implementation 'androidx.test.ext:junit-ktx:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.compose.ui:ui-graphics:1.2.1'
    // implementation('androidx.test:runner:1.4.0')
  //  implementation('androidx.test:orchestrator:1.4.0')

    kapt 'androidx.room:room-compiler:2.5.0-alpha03'
//    ksp 'androidx.room:room-compiler:2.4.0-rc01'
    implementation 'androidx.room:room-runtime:2.5.0-alpha03'

   implementation 'androidx.room:room-ktx:2.5.0-alpha03'
 //   implementation 'androidx.legacy:legacy-support-v4:1.0.0'
 //   implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.0")

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    implementation('androidx.test.espresso:espresso-core:3.4.0')

    // Java language implementation
    implementation('androidx.navigation:navigation-fragment:2.5.2')
  //  implementation("androidx.navigation:navigation-ui:2.3.5")

    // Kotlin
    implementation('androidx.navigation:navigation-fragment-ktx:2.5.2')
    implementation('androidx.navigation:navigation-ui-ktx:2.5.2')

    // Feature module Support
    implementation('androidx.navigation:navigation-dynamic-features-fragment:2.5.2')

    implementation 'androidx.core:core-splashscreen:1.0.0'


        // Kotlin + coroutines
        implementation("androidx.work:work-runtime-ktx:2.7.1")

       // optional - Multiprocess support
        implementation "androidx.work:work-multiprocess:2.7.1"


    // Testing Navigation
  //  androidTestImplementation('androidx.navigation:navigation-testing:2.4.0-beta02')

    // Jetpack Compose Integration
   // implementation("androidx.navigation:navigation-compose:2.4.0-beta02")

   // debugImplementation("androidx.fragment:fragment-testing:1.4.0")

    // Optional -- Mockito framework
    //testImplementation("org.mockito:mockito-core:3.+")
}
repositories {
    mavenCentral()
}
